import pygame
import sys
import random

pygame.font.init()

SCREEN_WIDTH, SCREEN_HEIGHT= 400,800
#PLAYER_WIDTH, PLAYER_HEIGHT = 50,30
HEALTH = 100
VELOCITY = 2
PROJECTILE_VELOCITY = 4
FPS = 60
WHITE = (0,0,0)
score_font = pygame.font.Font(None, 50)
final_font = pygame.font.Font(None, 30)

screen = pygame.display.set_mode((SCREEN_WIDTH,SCREEN_HEIGHT))
pygame.display.set_caption("Shooty Game")

class Player(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load('Images/Spaceship.png').convert_alpha()
        self.rect = self.image.get_rect(midbottom = (SCREEN_WIDTH / 2,SCREEN_HEIGHT - 100))
        self.width = 50
        self.height = 30

    def update(self):
        self.player_input()

    def player_input(self): #Inputs to move the player and shoot
        keys = pygame.key.get_pressed()
        if keys[pygame.K_UP] and self.rect.y - VELOCITY > 0:
            self.rect.y -= VELOCITY
        if keys[pygame.K_DOWN] and self.rect.y + VELOCITY + self.height < SCREEN_HEIGHT:
            self.rect.y += VELOCITY
        if keys[pygame.K_LEFT] and self.rect.x + VELOCITY > 0: 
            self.rect.x -= VELOCITY
        if keys[pygame.K_RIGHT] and self.rect.x + VELOCITY + self.width < SCREEN_WIDTH:
            self.rect.x += VELOCITY
        #if keys[pygame.K_SPACE]:
            #shoot
    
    #Player_health = HEALTH_FONT.render("Health: " + HEALTH, 1, WHITE)

class Enemy(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.transform.scale(pygame.image.load('Images/Enemy1.png').convert_alpha(), (30,30))
        self.rect = self.image.get_rect(midbottom = (SCREEN_WIDTH - 10, 100))


    def update(self):
        enemy_position_y = int(self.rect.y/100) % 2
        #print("x posit:", self.rect.x, " and y posit:", self.rect.y, " and enemy func: ", enemy_position_y)

        if enemy_position_y == 1 and self.rect.x > 50:
            self.move_left()
        elif enemy_position_y == 0 and self.rect.x < 350:
            self.move_right()
        else:
            self.move_down()

    def move_left(self):
        self.velocity = VELOCITY/2
        self.rect.x -= self.velocity

    def move_right(self):
        self.velocity = VELOCITY/2
        self.rect.x += self.velocity

    def move_down(self):
        self.velocity = VELOCITY/2
        self.rect.y += self.velocity

class Projectile(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()

    #def update(self):

class Obstacle(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()

    #def update(self):

def collision_sprite():
	if pygame.sprite.spritecollide(player,enemies,False):
            #print("HI")
            return False
	else: return True

def display_score():
	current_time = int(pygame.time.get_ticks() / 1000) - start_time
	score_surf = score_font.render(f'Score: {current_time}',False,(64,64,64))
	score_rect = score_surf.get_rect(center = (200,50))
	screen.blit(score_surf,score_rect)
	return current_time

player_health = 100

def display_health(player_health):
    health_surf = score_font.render(f'Health: {player_health}',False,(64,64,64))
    health_rect = health_surf.get_rect(center = (200,100))
    screen.blit(health_surf,health_rect)
    return player_health

all_sprites = pygame.sprite.Group()
enemies = pygame.sprite.Group()
projectiles = pygame.sprite.Group()
obstacles = pygame.sprite.Group()

player = Player()
all_sprites.add(player)

running = True
clock = pygame.time.Clock()
#player_health = 100
enemy_start = 0
start_time = 0
score = 0
score_font = pygame.font.Font(None, 50)


while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    #Launch enemies every 50 frames            
    enemy_start += 1
    if (enemy_start == 50):
        enemy = Enemy()
        all_sprites.add(enemy)
        enemies.add(enemy)
        enemy_start = 0


    all_sprites.update()
    screen.fill((3,3,3))
    score = display_score()
    display_health(player_health)

    if collision_sprite() == False:
        player_health -= 1

    if player_health < 0:
        final_message = final_font.render(f'You have been killed!',False,(64,64,64))
        final_rect = final_message.get_rect(center = (200,400))
        screen.blit(final_message,final_rect)
        pygame.display.update()
        running = False
        pygame.time.delay(3000)


    all_sprites.draw(screen)
    pygame.display.update()

    clock.tick(FPS)

pygame.quit()
sys.exit()
